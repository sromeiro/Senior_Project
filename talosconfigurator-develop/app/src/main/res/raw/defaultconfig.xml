<?xml version="1.0" encoding="UTF-8"?>
<!-- Issues to be resolved -->
<!-- Confirm all elements are in the "mode" sections -->

<!-- Notes -->
<!--Sample XML file generated by XMLSpy v2017 sp2 (x64) (http://www.altova.com)-->
<!-- Display:
    LD1/LD2 = Lookdown Left/Right
    HUD1/HUD4 = HUD starting far left, labeled HUD1, HUD2, HUD3, HUD4.  Locations for displays are consistent, Activate with True/False
-->

<!-- X_CELL/Y-CELL = # of cells from the top-left corner of a specific display -->
<!-- FORMAT = style of display.  Each data type may have multiple formats available -->

<!-- All tag-types shown below
<displaydef> Display Definition
    <cell>  Defines the character cell size in pixels
        <x_pixel>  x pixels in the character cell
        <y_pixel>  y pixels in the character cell
    <screens>  Starts the overall definition of the individual screens to bve configured
        <display>  Starts a new display
            <disp_name>  The reference name of the display, (HUD1, HUD2, HUD3, HUD4, LD1, LD2)
            <x_res>  Display resolution in the X-direction as oriented in space
            <y_res>  Display resolution in the Y-direction as oriented in space
            <max_x_cell>    Maximum number of cells to place on a given display - in order to control minimum character size on high resolution displays
            <max_x_cell>    Maximum number of cells to place on a given display - in order to control minimum character size on high resolution displays
    <elementdef>  Definition of all available elements.  This list will change continuously as capabilities are added.
        <element>   The beginning of a specific element definition
        <location>  The displays on which this element is allowed to be shown
        <format>    A particular way in which to display this element.  Each format MUST be described in the VAS Bridge ICD in order to be implemented
            <x_cell>    The width of the element in cells
            <y_cell>    The
        <STYLE field shows a representative number for the format on screen in the configuration tool (*not used operationally*) >
    <FILE> field lists the file to be shown for the entity (e.g. battery status = battery.bmp)
-->



<talosconfiguration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="TalosConfiguration.xsd">
	<version>1</version>
	<displaydef>
		<cell>
			<x_pixel>16</x_pixel>
			<y_pixel>32</y_pixel>
		</cell>

		<screens>
			<display>
				<disp_name>hud1</disp_name>
				<active>true</active>
				<x_res>768</x_res>
				<y_res>1024</y_res>
				<max_x_cell>35</max_x_cell>
				<max_y_cell>40</max_y_cell>
			</display>
			<display>
				<disp_name>hud2</disp_name>
				<active>true</active>
				<x_res>768</x_res>
				<y_res>1024</y_res>
				<max_x_cell>35</max_x_cell>
				<max_y_cell>40</max_y_cell>
			</display>
			<display>
				<disp_name>hud3</disp_name>
				<active>false</active>
				<x_res>768</x_res>
				<y_res>1024</y_res>
				<max_x_cell>35</max_x_cell>
				<max_y_cell>40</max_y_cell>
			</display>
			<display>
				<disp_name>hud4</disp_name>
				<active>true</active>
				<x_res>768</x_res>
				<y_res>1024</y_res>
				<max_x_cell>35</max_x_cell>
				<max_y_cell>40</max_y_cell>
			</display>
			<display>
				<disp_name>ld1</disp_name>
				<active>true</active>
				<x_res>1280</x_res>
				<y_res>1024</y_res>
				<max_x_cell>35</max_x_cell>
				<max_y_cell>40</max_y_cell>
			</display>
			<display>
				<disp_name>ld2</disp_name>
				<active>true</active>
				<x_res>1280</x_res>
				<y_res>1024</y_res>
				<max_x_cell>35</max_x_cell>
				<max_y_cell>40</max_y_cell>
			</display>
		</screens>
	</displaydef>

	<elementdef>
		<element>
			<ele_name>heading</ele_name>
			<location>hud1</location>
			<location>hud2</location>
			<location>hud3</location>
			<location>hud4</location>
			<format>
				<fmt_name>number</fmt_name>
				<x_cell>4</x_cell>
				<y_cell>1</y_cell>
				<style>290 </style>
			</format>
			<format>
				<fmt_name>scroll bar</fmt_name>
				<x_cell>19</x_cell>
				<y_cell>1</y_cell>
				<style>  290   300   310  </style>  <!-- Number fields showing mils and/or degrees-->
			</format>
			<format>
				<fmt_name>cardinal points</fmt_name>
				<x_cell>4</x_cell>
				<y_cell>1</y_cell>
				<style>ENE </style>
			</format>
			<format>
				<fmt_name>ribbon</fmt_name>
				<x_cell>19</x_cell>
				<y_cell>2</y_cell>
				<style>  280   290   300  </style>
				<style>   |  '  |  '  |   </style>
			</format>
			<unit>degrees</unit>
			<unit>mils</unit>
		</element>
		<element>
			<ele_name>location</ele_name>
			<location>hud1</location>
			<location>hud2</location>
			<location>hud3</location>
			<location>hud4</location>
			<format>
				<fmt_name>mgrs</fmt_name>
				<x_cell>22</x_cell>
				<y_cell>1</y_cell>
				<style>17Rll 12345 12345(11m)</style>
			</format>
			<format>
				<fmt_name>deg</fmt_name>
				<x_cell>28</x_cell>
				<y_cell>1</y_cell>
				<style>27.9506°N 82.4572°W(21ago)</style>
			</format>
			<format>
				<fmt_name>degmin</fmt_name>
				<x_cell>30</x_cell>
				<y_cell>1</y_cell>
				<style>27°57.037'n 82°27.433'w(21ago)</style>
			</format>
			<format>
				<fmt_name>degminsec</fmt_name>
				<x_cell>34</x_cell>
				<y_cell>1</y_cell>
				<style>27°57'02.22"n 82°27'25.98"w(21ago)</style>
			</format>
		</element>
		<!--
        <element>
            <ele_name>battery</ele_name>    battery is part of suit status
            <location>hud1</location>
            <location>hud2</location>
            <location>hud3</location>
            <location>hud4</location>
            <format>
                <fmt_name>icon</fmt_name>
                <x_cell>2</x_cell>
                <y_cell>1</y_cell>
                <file>batt.bmp</file>
            </format>
    -->
		<element>
			<ele_name>isr</ele_name>
			<location>ld1</location>
			<location>ld2</location>
			<format>
				<fmt_name>default</fmt_name>
				<x_cell>0</x_cell>
				<y_cell>0</y_cell>
				<style></style>   <!-- Add an image or video filename -->
				<!--  The ISR feed is really a "full-screen" piece of information.  How do we handle that?-->
			</format>
		</element>
		<element>
			<ele_name>overhead_map</ele_name>
			<!-- How do we show sub-elements of a menu item? The map has filtered items (friend, hostile, neutral, etc.) -->
			<location>ld1</location>
			<location>ld2</location>
			<format>
				<fmt_name>Google Street</fmt_name>
				<x_cell>0</x_cell>
				<y_cell>0</y_cell>
				<style></style>
				<!--  The Map feed is really a "full-screen" piece of information.  How do we handle that?-->
			</format>
			<format>
				<fmt_name>Mapquest</fmt_name>
				<x_cell>0</x_cell>
				<y_cell>0</y_cell>
				<style></style>
				<!--  The Map feed is really a "full-screen" piece of information.  How do we handle that?-->
			</format>
			<format>
				<fmt_name>Stored</fmt_name>
				<x_cell>0</x_cell>
				<y_cell>0</y_cell>
				<style></style>
				<!--  The Map feed is really a "full-screen" piece of information.  How do we handle that?-->
			</format>
			<subelement>GRG</subelement>
			<subelement>Routes</subelement>
			<subelement>POI</subelement>  <!-- POI stands for Points of Interest, and are individual CoT points which are not included in a route -->
			<subelement>Team</subelement>
			<subelement>Friendly</subelement>
			<subelement>Hostile</subelement>
			<subelement>Neutral</subelement>
			<subelement>Unknown</subelement>
		</element>
		<element>
			<ele_name>mission_packet</ele_name>
			<location>ld1</location>
			<location>ld2</location>
			<format>
				<fmt_name>default</fmt_name>
				<x_cell>0</x_cell>
				<y_cell>0</y_cell>
				<style></style>
				<!--  The Mission Packet feed is really a "full-screen" piece of information.  How do we handle that?-->
			</format>
		</element>
		<element>  <!-- How do we describe the two separate COMMs NET lists and two "Individual" lists -->
			<ele_name>commlist</ele_name>
			<location>hud1</location>
			<location>hud4</location>
			<format>
				<fmt_name>list</fmt_name>
				<x_cell>10</x_cell>
				<y_cell>2</y_cell>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
			</format>
			<format>
				<fmt_name>individuals</fmt_name>  <!-- Can this format be a "subset" of the "list" format? -->
				<x_cell>12</x_cell>
				<y_cell>14</y_cell>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
				<style>xxxxxxxxxx</style>
			</format>
		</element>
		<element>
			<ele_name>crit_sys_alert</ele_name>
			<location>hud1</location>
			<location>hud2</location>
			<location>hud3</location>
			<location>hud4</location>
			<format>
				<fmt_name>basic</fmt_name>
				<x_cell>40</x_cell>
				<y_cell>1</y_cell>
				<style>these are critical system alerts!       </style>
			</format>
		</element>
		<element>
			<ele_name>notification</ele_name>
			<location>hud1</location>
			<location>hud2</location>
			<location>hud3</location>
			<location>hud4</location>
			<format>
				<fmt_name>basic</fmt_name>
				<x_cell>40</x_cell>
				<y_cell>1</y_cell>
				<style>these are regular system notifications. </style>
			</format>
		</element>
		<element>
			<ele_name>messaging</ele_name>
			<location>hud1</location>
			<location>hud2</location>
			<location>hud3</location>
			<location>hud4</location>
			<format>
				<fmt_name>basic</fmt_name>
				<x_cell>40</x_cell>
				<y_cell>6</y_cell>  <!-- May be between 1 and 6 depending on the Configuration tool selection -->
				<!-- How do we show that a box is needed to let the user show how many chat rows they want to show?  -->
				<style>red1:these lines are typical chat messag</style>
				<style>red6: at lcc                            </style>
				<style>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</style>
				<style>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</style>
				<style>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</style>
				<style>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</style>
			</format>
		</element>
		<element>
			<ele_name>time</ele_name>
			<location>hud1</location>
			<location>hud2</location>
			<location>hud3</location>
			<location>hud4</location>
			<location>ld1</location>
			<location>ld2</location>
			<format>
				<fmt_name>hhmm.sstime</fmt_name>
				<x_cell>8</x_cell>
				<y_cell>1</y_cell>
				<style>2305.35L</style>
			</format>
			<unit>Local</unit>  <!-- The last character is "L" for Local -->
			<unit>Zulu</unit>  <!-- The last character is "Z" for Zulu -->
		</element>
		<element>
			<ele_name>menu</ele_name>
			<location>hud1</location>
			<location>hud2</location>
			<location>hud3</location>
			<location>hud4</location>
		</element>
		<element>
			<ele_name>3d</ele_name>
			<location>hud1</location>
			<location>hud2</location>
			<location>hud3</location>
			<location>hud4</location>
			<format>
				<fmt_name>default</fmt_name>
				<x_cell>0</x_cell>
				<y_cell>0</y_cell>
				<style></style>
				<!--  The 3d information is shown over all screens-->
			</format>
			<subelement>Routes</subelement>
			<subelement>POI</subelement>  <!-- POI stands for Points of Interest, and are individual CoT points which are not included in a route -->
			<subelement>Team</subelement>
			<subelement>Friendly</subelement>
			<subelement>Hostile</subelement>
			<subelement>Neutral</subelement>
			<subelement>Unknown</subelement>
			<!-- Need to add the range input and valid values -->
		</element>
		<element>
			<ele_name>system_status_icons</ele_name>
			<location>hud1</location>
			<location>hud2</location>
			<location>hud3</location>
			<location>hud4</location>
			<format>
				<fmt_name>default</fmt_name>
				<x_cell>0</x_cell>
				<y_cell>0</y_cell>
				<style></style>
				<!--  The 3d information is shown over all screens-->
			</format>
		</element>
		<element>
			<ele_name>system_status</ele_name>
			<location>ld1</location>
			<location>ld2</location>
			<format>
				<fmt_name>default</fmt_name>
				<x_cell>0</x_cell>
				<y_cell>0</y_cell>
				<style></style>
				<!--  The 3d information is shown over all screens-->
			</format>
		</element>
	</elementdef>

	<modedef>
		<!--    Every mode should list ALL elements, and their default positions and units, whether or not they are selected to be shown.
            If blank, the default modes should be created with all elements NOT displayed (blank screens).

    ***     Add MODE 0
    -->
		<mode>
			<mode_id>0</mode_id>
			<mode_name>AIM ONLY</mode_name>
			<element>
				<ele_name>heading</ele_name>
				<active>false</active>
				<position>
					<display>hud2</display>
					<x_cell>10</x_cell>
					<y_cell>20</y_cell>
				</position>
				<unit>deg</unit>
				<format>ribbon</format>
			</element>
		</mode>

		<!--<mode>-->
		<!--<mode_id>1</mode_id>-->
		<!--<mode_name>1</mode_name>-->
		<!--<element>-->
		<!--<ele_name>heading</ele_name>-->
		<!--<active>false</active>-->
		<!--<position>-->
		<!--<display>hud3</display>-->
		<!--<x_cell>10</x_cell>-->
		<!--<y_cell>2</y_cell>-->
		<!--</position>-->
		<!--<unit>deg</unit>-->
		<!--<format>ribbon</format>-->
		<!--</element>-->
		<!--<element>-->
		<!--<ele_name>location</ele_name>-->
		<!--<active>false</active>-->
		<!--<position>-->
		<!--<display>hud3</display>-->
		<!--<x_cell>0</x_cell>-->
		<!--<y_cell>0</y_cell>-->
		<!--</position>-->
		<!--<format>mgrs</format>-->
		<!--</element>-->
		<!--<element>-->
		<!--<ele_name>isr</ele_name>-->
		<!--<active>true</active>-->
		<!--<position>-->
		<!--<display>ld2</display>-->
		<!--<test>test7</test>-->
		<!--<x_cell>0</x_cell>-->
		<!--<y_cell>0</y_cell>-->
		<!--</position>-->
		<!--</element>-->
		<!--<element>-->
		<!--<ele_name>overhead_map</ele_name>-->
		<!--<active>true</active>-->
		<!--<position>-->
		<!--<display>ld1</display>-->
		<!--<x_cell>0</x_cell>-->
		<!--<y_cell>0</y_cell>-->
		<!--</position>-->
		<!--<type>google_street</type>-->
		<!--<subelement>GRG</subelement>-->
		<!--<subelement>Routes</subelement>-->
		<!--<subelement>POI</subelement>-->
		<!--<subelement>Hostile</subelement>-->
		<!--<subelement>Unknown</subelement>-->
		<!--</element>-->
		<!--<element>-->
		<!--<ele_name>mission_packet</ele_name>-->
		<!--<active>true</active>-->
		<!--<position>-->
		<!--<display>ld2</display>-->
		<!--<test>test8</test>-->
		<!--<x_cell>0</x_cell>-->
		<!--<y_cell>0</y_cell>-->
		<!--</position>-->
		<!--</element>-->
		<!--<element>-->
		<!--<ele_name>commlist</ele_name>-->
		<!--<active>true</active>-->
		<!--<position>-->
		<!--<display>hud4</display>-->
		<!--<x_cell>40</x_cell>-->
		<!--<y_cell>3</y_cell>-->
		<!--</position>-->
		<!--<format>individuals</format>-->
		<!--</element>-->
		<!--<element>-->
		<!--<ele_name>crit_sys_alerts</ele_name>-->
		<!--<active>true</active>-->
		<!--<position>-->
		<!--<display>hud3</display>-->
		<!--<x_cell>20</x_cell>-->
		<!--<y_cell>18</y_cell>-->
		<!--</position>-->
		<!--</element>-->
		<!--<element>-->
		<!--<ele_name>notification</ele_name>-->
		<!--<active>true</active>-->
		<!--<position>-->
		<!--<display>hud3</display>-->
		<!--<x_cell>20</x_cell>-->
		<!--<y_cell>19</y_cell>-->
		<!--</position>-->
		<!--</element>-->
		<!--<element>-->
		<!--<ele_name>messaging</ele_name>-->
		<!--<active>true</active>-->
		<!--<position>-->
		<!--<display>hud3</display>-->
		<!--<x_cell>10</x_cell>-->
		<!--<y_cell>20</y_cell>-->
		<!--</position>-->
		<!--</element>-->
		<!--<element>-->
		<!--<ele_name>time</ele_name>-->
		<!--<active>true</active>-->
		<!--<position>-->
		<!--<display>hud3</display>-->
		<!--<x_cell>24</x_cell>-->
		<!--<y_cell>0</y_cell>-->
		<!--</position>-->
		<!--<format>zulu</format>-->
		<!--</element>-->

		<!--<element>-->
		<!--<ele_name>3d</ele_name>-->
		<!--<active>true</active>-->
		<!--<position>-->
		<!--<location>hud1</location>-->
		<!--<location>hud4</location>-->
		<!--</position>-->
		<!--<routes>true</routes>-->
		<!--<friendly>true</friendly>-->
		<!--<hostile>true</hostile>-->
		<!--<unknown>false</unknown>-->
		<!--<neutral>false</neutral>-->
		<!--<poi>true</poi>-->
		<!--<team>true</team>-->
		<!--<range>300</range>-->
		<!--</element>-->
		<!--<element>-->
		<!--<ele_name>system_status_icons</ele_name>-->
		<!--<active>true</active>-->
		<!--<position>-->
		<!--<display>HUD4</display>-->
		<!--<x_cell>20</x_cell>-->
		<!--<y_cell>1</y_cell>-->
		<!--</position>-->
		<!--</element>-->
		<!--<element>-->
		<!--<ele_name>system_status</ele_name>-->
		<!--<active>false</active>-->
		<!--<position>-->
		<!--<display>ld2</display>-->
		<!--<test>test9</test>-->
		<!--<x_cell>0</x_cell>-->
		<!--<y_cell>0</y_cell>-->
		<!--</position>-->
		<!--</element>-->
		<!--</mode>-->
	</modedef>

	<TALOSControlsConfig>
		<functionlist>
			<!-- functionlist describes all of the available button functions, with a relative command and vasAction -->
			<function>
				<func_name>NONE</func_name>
				<text>Button has no function</text>
				<command></command>
				<vasAction></vasAction>
			</function>
			<function>
				<func_name>BRIGHT+</func_name>
				<text>Increases brightness on all displays</text>
				<command>brt_all=brt_all+1</command>
				<vasAction>slider</vasAction>
			</function>
			<function>
				<func_name>BRIGHT-</func_name>
				<text>Decreases brightness on all displays</text>
				<command>brt_all=brt_all-1</command>
				<vasAction>slider</vasAction>
			</function>
			<function>
				<func_name>VOLUME+</func_name>
				<text>Increases system volume</text>
				<command>vol_all=vol_all+1</command>
				<vasAction>slider</vasAction>
			</function>
			<function>
				<func_name>VOLUME-</func_name>
				<text>Decreases system volume</text>
				<command>vol_all=vol_all-1</command>
				<vasAction>slider</vasAction>
			</function>
			<function>
				<func_name>MODE NEXT</func_name>
				<text>Advances to next Operational MODE</text>
				<command>mode=mode+1</command>  <!-- Mode wraps back to one after it reaches the last defined mode -->
				<vasAction>mode_next</vasAction>  <!-- VAS needs to be sent a MODE command with the next mode # -->)
			</function>
			<function>
				<func_name>MODE PREV</func_name>
				<text>Returns to previous Operational MODE</text>
				<command>mode=mode-1</command>  <!-- When Mode reaches 1, it wraps back to the last defined mode.  It does not increment to "0"  -->
				<vasAction>mode_prev</vasAction>  <!-- VAS needs to be sent a MODE command with the previous mode # -->
			</function>
			<function>
				<func_name>VIZ MUTE</func_name>
				<text>Toggles to MODE 0 (Aim Only)</text>
				<command>Toggle VizMute</command>  <!-- Toggles Viz Mute  -->
				<vasAction></vasAction>  <!-- VAS needs to be sent the VizMute Command -->
			</function>
			<function>
				<func_name>TOGGLE LOOKDOWN</func_name>
				<text>Changes selected Lookdown Display</text>
				<command></command>    <!-- Selects the next display for item navigation  -->
				<vasAction></vasAction>
			</function>
			<function>
				<func_name>LOOKDOWN ELEMENT NEXT</func_name>
				<text>Changes the selected Lookdown display to the next piece of information</text>
				<command></command>   <!-- Switches the selected lookdown display to the next item to be shown -->
				<vasAction></vasAction>
			</function>
			<function>
				<func_name>LOOKDOWN ELEMENT PREV</func_name>
				<text>Changes the selected lookdown display to the previous information</text>
				<command></command>     <!-- Switches the selected lookdown display to the previous item to be shown -->
				<vasAction></vasAction>
			</function>
			<function>
				<func_name>ZOOM IN</func_name>
				<text>Zooms in the selected Lookdown display</text>
				<command></command>
				<vasAction></vasAction>
			</function>
			<function>
				<func_name>ZOOM OUT</func_name>
				<text>Zooms out the selected Lookdown display</text>
				<command></command>
				<vasAction></vasAction>
			</function>
		</functionlist>

		<control>
			<!-- Each controller to be configured requires a section -->
			<ctl_name>FOREARM</ctl_name>
			<btn_cfg_x>4</btn_cfg_x>  <!-- This describes the max-size of the button array.  Not all buttons are present, so only declared buttons should be shown.  Buttons are always numbered from top left, moving right, then down -->
			<btn_cfg_y>4</btn_cfg_y>
			<!-- For example:  The chest controller would be a 3x4 array with only positions 1&3 in the first row, only position 2 in the second row, all positions in the third row, and only position 2 in the last row. -->
			<button>
				<number>1</number>
				<pos_x>1</pos_x>
				<pos_y>2</pos_y>
				<key>104</key>
			</button>
			<button>
				<number>2</number>
				<pos_x>2</pos_x>
				<pos_y>2</pos_y>
				<key>105</key>
			</button>
			<button>
				<number>3</number>
				<pos_x>3</pos_x>
				<pos_y>2</pos_y>
				<key>106</key>
			</button>
			<button>
				<number>4</number>
				<pos_x>4</pos_x>
				<pos_y>2</pos_y>
				<key>107</key>
			</button>
			<button>
				<number>5</number>
				<pos_x>1</pos_x>
				<pos_y>3</pos_y>
				<key>108</key>
			</button>
			<button>
				<number>6</number>
				<pos_x>2</pos_x>
				<pos_y>3</pos_y>
				<key>109</key>
			</button>
			<button>
				<number>7</number>
				<pos_x>3</pos_x>
				<pos_y>3</pos_y>
				<key>110</key>
			</button>
			<button>
				<number>8</number>
				<pos_x>4</pos_x>
				<pos_y>3</pos_y>
				<key>111</key>
			</button>
			<button>
				<number>9</number>
				<pos_x>2</pos_x>
				<pos_y>1</pos_y>
				<key>112</key>
			</button>
			<button>
				<number>10</number>
				<pos_x>2</pos_x>
				<pos_y>4</pos_y>
				<key>113</key>
			</button>
		</control>
		<control>
			<ctl_name>WEAPON</ctl_name>
			<btn_cfg_x>4</btn_cfg_x>
			<btn_cfg_y>1</btn_cfg_y>
			<button>
				<number>1</number>
				<pos_x>1</pos_x>
				<pos_y>1</pos_y>
				<key>114</key>
			</button>
			<button>
				<number>2</number>
				<pos_x>2</pos_x>
				<pos_y>1</pos_y>
				<key>115</key>
			</button>
			<button>
				<number>3</number>
				<pos_x>3</pos_x>
				<pos_y>1</pos_y>
				<key>116</key>
			</button>
			<button>
				<number>4</number>
				<pos_x>4</pos_x>
				<pos_y>1</pos_y>
				<key>117</key>
			</button>
		</control>

		<control>
			<ctl_name>MISC</ctl_name>
			<btn_cfg_x>4</btn_cfg_x>
			<btn_cfg_y>1</btn_cfg_y>
			<button>
				<number>1</number>
				<pos_x>1</pos_x>
				<pos_y>1</pos_y>
				<key>118</key>
			</button>
			<button>
				<number>2</number>
				<pos_x>2</pos_x>
				<pos_y>1</pos_y>
				<key>119</key>
			</button>
			<button>
				<number>3</number>
				<pos_x>3</pos_x>
				<pos_y>1</pos_y>
				<key>120</key>
			</button>
			<button>
				<number>4</number>
				<pos_x>4</pos_x>
				<pos_y>1</pos_y>
				<key>121</key>
			</button>
		</control>

		<control>
			<ctl_name>CHEST</ctl_name>
			<btn_cfg_x>4</btn_cfg_x>
			<btn_cfg_y>1</btn_cfg_y>
			<button>
				<number>1</number>
				<pos_x>1</pos_x>
				<pos_y>1</pos_y>
				<key>122</key>
			</button>
			<button>
				<number>2</number>
				<pos_x>2</pos_x>
				<pos_y>1</pos_y>
				<key>123</key>
			</button>
			<button>
				<number>3</number>
				<pos_x>3</pos_x>
				<pos_y>1</pos_y>
				<key>124</key>
			</button>
			<button>
				<number>4</number>
				<pos_x>4</pos_x>
				<pos_y>1</pos_y>
				<key>125</key>
			</button>
		</control>

		<setting>
			<!-- This section links each button to a function.  For the config tool, this section sets the "default" for each button -->
			<mode>
				<mode_id>0</mode_id>
				<!-- There must be a "mode" section for each "mode" defined in the VAS Configuration file -->
				<Timeout>30</Timeout>
				<intent>
					<key>104</key>              <!-- This is the keystroke we expect to see, or that we could re-configure to "spoof" the system -->
					<func_name>BRIGHT+</func_name>  <!-- This is the corresponding function -->
				</intent>
				<intent>
					<key>105</key>
					<func_name>VOLUME+</func_name>
				</intent>
				<intent>
					<key>106</key>
					<func_name>ZOOM IN</func_name>
				</intent>
				<intent>
					<key>107</key>
					<func_name>MODE NEXT</func_name>
				</intent>
				<intent>
					<key>108</key>
					<func_name>BRIGHT-</func_name>
				</intent>
				<intent>
					<key>109</key>
					<func_name>VOLUME-</func_name>
				</intent>
				<intent>
					<key>110</key>
					<func_name>ZOOM OUT</func_name>
				</intent>
				<intent>
					<key>111</key>
					<func_name>MODE PREV</func_name>
				</intent>
				<intent>
					<key>112</key>
					<func_name>TOGGLE LOOKDOWN</func_name>
				</intent>
				<intent>
					<key>113</key>
					<func_name>NONE</func_name>
				</intent>
				<intent>
					<key>114</key>
					<func_name>VIZ MUTE</func_name>
				</intent>
				<intent>
					<key>115</key>
					<func_name>MODE NEXT</func_name>
				</intent>
				<intent>
					<key>116</key>
					<func_name>MODE PREV</func_name>
				</intent>
				<intent>
					<key>117</key>
					<func_name>MODE NEXT</func_name>
				</intent>
				<intent>
					<key>118</key>
					<func_name>VIZ MUTE</func_name>
				</intent>
				<intent>
					<key>119</key>
					<func_name>MODE NEXT</func_name>
				</intent>
				<intent>
					<key>120</key>
					<func_name>MODE PREV</func_name>
				</intent>
				<intent>
					<key>121</key>
					<func_name>MODE NEXT</func_name>
				</intent>
				<intent>
					<key>122</key>
					<func_name>ZOOM OUT</func_name>
				</intent>
				<intent>
					<key>123</key>
					<func_name>ZOOM IN</func_name>
				</intent>
				<intent>
					<key>124</key>
					<func_name>MODE PREV</func_name>
				</intent>
				<intent>
					<key>125</key>
					<func_name>MODE NEXT</func_name>
				</intent>
			</mode>

			<mode>
				<mode_id>1</mode_id>
				<Timeout>20</Timeout>
				<intent>
					<key>104</key>              <!-- This is the keystroke we expect to see, or that we could re-configure to "spoof" the system -->
					<func_name>BRIGHT+</func_name>  <!-- This is the corresponding function -->
				</intent>
				<intent>
					<key>105</key>
					<func_name>VOLUME+</func_name>
				</intent>
				<intent>
					<key>106</key>
					<func_name>ZOOM IN</func_name>
				</intent>
				<intent>
					<key>107</key>
					<func_name>MODE NEXT</func_name>
				</intent>
				<intent>
					<key>108</key>
					<func_name>BRIGHT-</func_name>
				</intent>
				<intent>
					<key>109</key>
					<func_name>VOLUME-</func_name>
				</intent>
				<intent>
					<key>110</key>
					<func_name>ZOOM OUT</func_name>
				</intent>
				<intent>
					<key>111</key>
					<func_name>MODE PREV</func_name>
				</intent>
				<intent>
					<key>112</key>
					<func_name>TOGGLE LOOKDOWN</func_name>
				</intent>
				<intent>
					<key>113</key>
					<func_name>NONE</func_name>
				</intent>
				<intent>
					<key>114</key>
					<func_name>MODE NEXT</func_name>
				</intent>
				<intent>
					<key>115</key>
					<func_name>MODE NEXT</func_name>
				</intent>
				<intent>
					<key>116</key>
					<func_name>MODE PREV</func_name>
				</intent>
				<intent>
					<key>117</key>
					<func_name>MODE NEXT</func_name>
				</intent>
				<intent>
					<key>118</key>
					<func_name>VIZ MUTE</func_name>
				</intent>
				<intent>
					<key>119</key>
					<func_name>MODE NEXT</func_name>
				</intent>
				<intent>
					<key>120</key>
					<func_name>MODE PREV</func_name>
				</intent>
				<intent>
					<key>121</key>
					<func_name>MODE NEXT</func_name>
				</intent>
				<intent>
					<key>122</key>
					<func_name>VOLUME+</func_name>
				</intent>
				<intent>
					<key>123</key>
					<func_name>VOLUME-</func_name>
				</intent>
				<intent>
					<key>124</key>
					<func_name>ZOOM IN</func_name>
				</intent>
				<intent>
					<key>125</key>
					<func_name>ZOOM OUT</func_name>
				</intent>
			</mode>

		</setting>

	</TALOSControlsConfig>

</talosconfiguration>